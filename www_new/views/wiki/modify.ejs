<!doctype html>
<html lang="en">
    <head>
        <%-include("../shared/meta");-%>
    </head>
    <body ng-app="legendwiki-app" ng-controller="wiki-modify">
        <%-include("../shared/header");-%>
        <div class="container">
            <form name="wikiForm" ng-submit="<%-(vm.wikiPage ? "editWikiPage(wikiPage)" : "addWikiPage(wikiPage)")%>" ng-cloak>
                <div class="form-row">
                    <%if (vm.wikiPage) {%>
                    <h1>Edit Wiki Page</h1>
                    <%} else {%>
                    <h1>Add Wiki Page</h1>
                    <%}%>
                </div>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-5">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Title</span>
                            </div>
                            <input class="form-control" type="text" name="title" ng-model="wikiPage.title" ng-class="{'is-invalid': wikiForm.title.$invalid}" required lh-autofocus>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-5">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Category</span>
                            </div>
                            <select class="form-control" name="category" ng-model="wikiPage.categoryId" ng-class="{'is-invalid': wikiForm.category.$invalid}" required>
                                <%for (let i = 0; i < vm.categories.length; ++i) {%>
                                <option ng-value="<%-vm.categories[i].id%>"><%=vm.categories[i].name%></option>
                                <%}%>
                            </select>
                        </div>
                    </div>
                </div>
                <span class="text-info">Use a semicolon to split multiple tags.</span>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-5">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Tags</span>
                            </div>
                            <input class="form-control" type="text" name="tags" ng-model="wikiPage.tags" min="0" ng-class="{'is-invalid': wikiForm.tags.$invalid}">
                        </div>
                    </div>
                </div>
                <br>
                <span>This field supports <a href="https://github.com/showdownjs/showdown/wiki/Showdown's-Markdown-syntax" target="_blank">markdown</a> and <a href="https://github.com/showdownjs/showdown/wiki/Emojis" target="_blank">emoji</a>.</span>
                <div class="form-row">
                    <div class="form-group col-12">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Content</span>
                            </div>
                            <textarea class="form-control" rows="10" ng-model="wikiPage.content"></textarea>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-12">
                        <div class="card">
                            <div class="card-header">Preview</div>
                            <div class="card-body" markdown-to-html="wikiPage.content"></div>
                        </div>
                    </div>
                </div>
                <br>
                <div class="row">
                    <button class="btn btn-primary btn-block col-12 offset-md-8 col-md-4 offset-lg-10 col-lg-2" type="submit" ng-disabled="<%-(vm.wikiPage ? "!canEdit()" : "!canAdd()")%>">Save</button>
                </div>
                <br><br>
            </form>
        </div>
        <%-include("../shared/footer");-%>
        <%-include("../shared/scripts");-%>
        <%-include("../shared/markdown");-%>
        <script>
            app.controller("wiki-modify", ["$scope", "$http", "$cookies", function($scope, $http, $cookies) {
                let initialize = function() {
                    <%_if (vm.wikiPage) {%>
                        $scope.wikiPage = {
                            id:<%-vm.wikiPage.id%>,
                            title:"<%-vm.wikiPage.title.replace(/"/g,"\\\"")%>",
                            categoryId:<%-vm.wikiPage.categoryId%>,
                            subcategoryId:<%-vm.wikiPage.subcategoryId%>,
                            tags:"<%-vm.wikiPage.tags%>",
                            content:"<%-vm.wikiPage.content.replace(/"/g,"\\\"").replace(/\n/g,"\\n")%>",
                        };
                        $scope.initialWikiPage = angular.copy($scope.wikiPage);
                    <%_} else {_%>
                        $scope.wikiPage = {
                            tags: "",
                            content: ""
                        };
                    <%_}_%>
                }

                <%_if (vm.wikiPage) {_%>
                    $scope.canEdit = function() {
                        return $scope.wikiForm.$valid && angular.toJson($scope.wikiPage) !== angular.toJson($scope.initialWikiPage);
                    };

                    $scope.editWikiPage = function(wikiPage) {
                        let query = [
                            "mutation {",
                                "updateWikiPage(id:",wikiPage.id,",",
                                "authToken:\"",$cookies.get("loginToken"),"\",",
                                "title:\"",wikiPage.title,"\",",
                                "categoryId:",wikiPage.categoryId,",",
                                "subcategoryId:",wikiPage.subcategoryId,",",
                                "tags:",wikiPage.tags,",",
                                "content:\"",wikiPage.content,"\") {",
                                    "token ",
                                    "expires",
                                "}",
                            "}"
                        ];
                        $http({
                            url: "/api",
                            method: "POST",
                            data: {"query": query.join("")}
                        }).then((response) => {
                            let data = response.data.data.updateWikiPage;
                            let newToken = data.token;
                            let expireDate = data.expires;
                            $cookies.put("loginToken", newToken, {"path": "/", "expires": expireDate, "secure": true, "samesite": "strict"});
                            window.location = "/wiki/details.html?id=" + wikiPage.id;
                        });
                    };
                <%_} else {_%>
                    $scope.canAdd = function() {
                        return $scope.wikiForm.$valid;
                    };

                    $scope.addWikiPage = function(wikiPage) {
                        let query = [
                            "mutation {",
                                "insertWikiPage(authToken:\"",$cookies.get("loginToken"),"\",",
                                "title:\"",wikiPage.title,"\",",
                                "categoryId:",wikiPage.categoryId,",",
                                "subcategoryId:",wikiPage.subcategoryId,",",
                                "tags:",wikiPage.tags,",",
                                "content:\"",wikiPage.content,"\") {",
                                    "id ",
                                    "tokenRenewal {",
                                        "token ",
                                        "expires",
                                    "}",
                                "}",
                            "}"
                        ];
                        $http({
                            url: "/api",
                            method: "POST",
                            data: {"query": query.join("")}
                        }).then((response) => {
                            let data = response.data.data.insertWikiPage;
                            let newToken = data.tokenRenewal.token;
                            let expireDate = data.tokenRenewal.expires;
                            $cookies.put("loginToken", newToken, {"path": "/", "expires": expireDate, "secure": true, "samesite": "strict"});
                            window.location = "/wiki/details.html?id=" + data.id;
                        });
                    };
                <%_}_%>

                initialize();
            }]);
        </script>
    </body>
</html>
