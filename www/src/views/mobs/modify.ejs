<!doctype html>
<html lang="en">
    <head>
        <%-include("../shared/meta");-%>
        <%if (vm.mob.id) {%>
        <link href="https://www.legendhub.org/mobs/edit.html?id=<%-vm.mob.id%>" rel="canonical">
        <%}else{%>
        <link href="https://www.legendhub.org/mobs/add.html" rel="canonical">
        <%}%>
        <meta name="robots" content="none">
    </head>
    <body ng-app="legendwiki-app" ng-controller="ModifyMobsController as modifyMobs" ng-init="modifyMobs.init(<%=JSON.stringify(vm.mob)%>)">
        <%-include("../shared/header");-%>
        <div class="container">
            <form name="mobForm" ng-submit="modifyMobs.submit()">
                <div class="form-row">
                    <%if (vm.mob.id) {%>
                    <h1>Edit Mob</h1>
                    <%} else {%>
                    <h1>Add Mob</h1>
                    <%}%>
                </div>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-5">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Name</span>
                            </div>
                            <input class="form-control" type="text" name="name" ng-model="modifyMobs.mob.name" ng-class="{'is-invalid': mobForm.name.$invalid}" required lh-autofocus>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-5">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Area</span>
                            </div>
                            <select class="form-control" name="area" ng-model="modifyMobs.mob.areaId" ng-class="{'is-invalid': mobForm.area.$invalid}" required>
                                <%for (let i = 0; i < vm.areas.length; ++i) {%>
                                <option ng-value="<%-vm.areas[i].id%>"><%=vm.areas[i].name%><%=(vm.areas[i].eraName ? ` (${vm.areas[i].eraName})`:"")%></option>
                                <%}%>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-4 col-lg-2">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Xp</span>
                            </div>
                            <input class="form-control" type="number" name="xp" ng-model="modifyMobs.mob.xp" min="0" ng-class="{'is-invalid': mobForm.xp.$invalid}" required>
                        </div>
                    </div>
                    <div class="form-group col-4 col-lg-2">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Gold</span>
                            </div>
                            <input class="form-control" type="number" name="gold" ng-model="modifyMobs.mob.gold" ng-class="{'is-invalid': mobForm.gold.$invalid}" required>
                        </div>
                    </div>
                    <div class="form-group col-4 col-lg-2">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Aggro</span>
                            </div>
                            <div class="input-group-append">
                                <div class="input-group-text">
                                    <input type="checkbox" ng-model="modifyMobs.mob.aggro">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br>
                <span>This field supports <a href="https://github.com/showdownjs/showdown/wiki/Showdown's-Markdown-syntax" target="_blank">markdown</a> and <a href="https://github.com/showdownjs/showdown/wiki/Emojis" target="_blank">emoji</a>.</span>
                <div class="form-row">
                    <div class="form-group col-12 col-lg-6">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">Notes</span>
                            </div>
                            <textarea class="form-control" rows="5" ng-model="modifyMobs.mob.notes"></textarea>
                        </div>
                    </div>
                </div>
                <br>
                <div class="row">
                    <button class="btn btn-primary btn-block col-12 offset-md-8 col-md-4 offset-lg-10 col-lg-2" type="submit" ng-disabled="!modifyMobs.canSubmit()">Save</button>
                </div>
                <br><br>
            </form>
        </div>
        <%-include("../shared/footer");-%>
        <%-include("../shared/scripts");-%>
        <%-include("../shared/markdown");-%>
        <script>
            (function() {
                angular
                .module("legendwiki-app")
                .controller("ModifyMobsController", ModifyMobsController);

                ModifyMobsController.$inject = ["$scope", "$http", "$cookies"];

                function ModifyMobsController($scope, $http, $cookies) {
                    var vm = this;

                    vm.init = init;
                    vm.canSubmit = canSubmit;
                    vm.submit = submit;

                    function init(mob) {
                        vm.edit = mob.id != null;

                        vm.mob = mob;
                        vm.initialMob = angular.copy(vm.mob);
                    };

                    function canEdit() {
                        return $scope.mobForm.$valid && angular.toJson(vm.mob) !== angular.toJson(vm.initialMob);
                    };

                    function editMob() {
                        if (!canEdit())
                            return;

                        let query = [
                            "mutation {",
                                "updateMob(id:",vm.mob.id,",",
                                "authToken:\"",$cookies.get("loginToken"),"\",",
                                "name:\"",vm.mob.name,"\",",
                                "xp:",vm.mob.xp,",",
                                "areaId:",vm.mob.areaId,",",
                                "gold:",vm.mob.gold,",",
                                "notes:\"\"\"",vm.mob.notes,"\"\"\",",
                                "aggro:",vm.mob.aggro,") {",
                                    "token ",
                                    "expires",
                                "}",
                            "}"
                        ];
                        $http({
                            url: "/api",
                            method: "POST",
                            data: {"query": query.join("")}
                        }).then((response) => {
                            let data = response.data.data.updateMob;
                            let newToken = data.token;
                            let expireDate = data.expires;
                            $cookies.put("loginToken", newToken, {path: "/", expires: expireDate, secure: true, samesite: "lax"});
                            window.location = "/mobs/details.html?id=" + vm.mob.id;
                        });
                    };

                    function canAdd() {
                        return $scope.mobForm.$valid;
                    };

                    function addMob() {
                        if (!canAdd())
                            return;

                        let query = [
                            "mutation {",
                                "insertMob(authToken:\"",$cookies.get("loginToken"),"\",",
                                "name:\"",vm.mob.name,"\",",
                                "xp:",vm.mob.xp,",",
                                "areaId:",vm.mob.areaId,",",
                                "gold:",vm.mob.gold,",",
                                "notes:\"\"\"",vm.mob.notes,"\"\"\",",
                                "aggro:",vm.mob.aggro,") {",
                                    "id ",
                                    "tokenRenewal {",
                                        "token ",
                                        "expires",
                                    "}",
                                "}",
                            "}"
                        ];
                        $http({
                            url: "/api",
                            method: "POST",
                            data: {"query": query.join("")}
                        }).then((response) => {
                            let data = response.data.data.insertMob;
                            let newToken = data.tokenRenewal.token;
                            let expireDate = data.tokenRenewal.expires;
                            $cookies.put("loginToken", newToken, {path: "/", expires: expireDate, secure: true, samesite: "lax"});
                            window.location = "/mobs/details.html?id=" + data.id;
                        }).catch(function(errors) {
                            vm.errors = errors;
                        });
                    };

                    function canSubmit() {
                        return vm.edit ? canEdit() : canAdd();
                    };

                    function submit() {
                        if (vm.edit)
                            editMob();
                        else
                            addMob();
                    };
                };
            })();
        </script>
    </body>
</html>
